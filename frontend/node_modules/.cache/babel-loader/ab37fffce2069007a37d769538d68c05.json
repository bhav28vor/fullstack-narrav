{"ast":null,"code":"var _jsxFileName = \"/Users/vorambhavan/fullstack-task/frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BarChart from \"./BarChart\";\nimport LineChart from \"./LineChart\"; // Import the LineChart component\n\nfunction App() {\n  const [tasks, setTasks] = useState({});\n  const [selectedTaskData, setSelectedTaskData] = useState(null);\n  const [selectedYear, setSelectedYear] = useState(\"2024\"); // Default year\n  const [selectedBrand, setSelectedBrand] = useState(\"All\"); // Default brand\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/tasks\").then(response => {\n      setTasks(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching tasks:\", error);\n    });\n  }, []);\n\n  // Fetch task data for analytics when a \"View Analytics\" button is clicked\n  const handleViewAnalytics = taskId => {\n    axios.get(`http://localhost:8000/tasks/${taskId}`).then(response => {\n      setSelectedTaskData(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching task data:\", error);\n    });\n  };\n\n  // Filter the task data based on selected year and brand\n  const filteredData = selectedTaskData ? selectedTaskData.filter(d => d.date_of_sale.startsWith(selectedYear) && (selectedBrand === \"All\" || d.company === selectedBrand)) : [];\n\n  // Extract unique brand names from the task data\n  const uniqueBrands = selectedTaskData ? [\"All\", ...new Set(selectedTaskData.map(d => d.company))] : [\"All\"];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Task List\"), Object.keys(tasks).length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"No tasks found\") : /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, Object.entries(tasks).map(([taskId, taskStatus]) => /*#__PURE__*/React.createElement(\"li\", {\n    key: taskId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Task \", taskId, \": \", taskStatus, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleViewAnalytics(taskId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"View Analytics\")))), selectedTaskData && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Analytics for Task \", selectedTaskData.task_id), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Select Year: \"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setSelectedYear(e.target.value),\n    value: selectedYear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2023\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"2023\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2024\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"2024\")), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Select Brand: \"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setSelectedBrand(e.target.value),\n    value: selectedBrand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, uniqueBrands.map(brand => /*#__PURE__*/React.createElement(\"option\", {\n    key: brand,\n    value: brand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, brand))), /*#__PURE__*/React.createElement(BarChart, {\n    data: filteredData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(LineChart, {\n    data: filteredData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","axios","BarChart","LineChart","App","tasks","setTasks","selectedTaskData","setSelectedTaskData","selectedYear","setSelectedYear","selectedBrand","setSelectedBrand","get","then","response","data","catch","error","console","handleViewAnalytics","taskId","filteredData","filter","d","date_of_sale","startsWith","company","uniqueBrands","Set","map","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","taskStatus","key","onClick","task_id","onChange","e","target","value","brand"],"sources":["/Users/vorambhavan/fullstack-task/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BarChart from \"./BarChart\";\nimport LineChart from \"./LineChart\"; // Import the LineChart component\n\nfunction App() {\n  const [tasks, setTasks] = useState({});\n  const [selectedTaskData, setSelectedTaskData] = useState(null);\n  const [selectedYear, setSelectedYear] = useState(\"2024\"); // Default year\n  const [selectedBrand, setSelectedBrand] = useState(\"All\"); // Default brand\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/tasks\")\n      .then((response) => {\n        setTasks(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching tasks:\", error);\n      });\n  }, []);\n\n  // Fetch task data for analytics when a \"View Analytics\" button is clicked\n  const handleViewAnalytics = (taskId) => {\n    axios.get(`http://localhost:8000/tasks/${taskId}`)\n      .then((response) => {\n        setSelectedTaskData(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching task data:\", error);\n      });\n  };\n\n  // Filter the task data based on selected year and brand\n  const filteredData = selectedTaskData\n    ? selectedTaskData.filter(d => \n        d.date_of_sale.startsWith(selectedYear) && \n        (selectedBrand === \"All\" || d.company === selectedBrand)\n      )\n    : [];\n\n  // Extract unique brand names from the task data\n  const uniqueBrands = selectedTaskData \n    ? [\"All\", ...new Set(selectedTaskData.map(d => d.company))] \n    : [\"All\"];\n\n  return (\n    <div>\n      <h1>Task List</h1>\n      {Object.keys(tasks).length === 0 ? (\n        <p>No tasks found</p>\n      ) : (\n        <ul>\n          {Object.entries(tasks).map(([taskId, taskStatus]) => (\n            <li key={taskId}>\n              Task {taskId}: {taskStatus}\n              <button onClick={() => handleViewAnalytics(taskId)}>View Analytics</button>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {selectedTaskData && (\n        <div>\n          <h2>Analytics for Task {selectedTaskData.task_id}</h2>\n          \n          {/* Dropdown for year selection */}\n          <label>Select Year: </label>\n          <select onChange={(e) => setSelectedYear(e.target.value)} value={selectedYear}>\n            <option value=\"2023\">2023</option>\n            <option value=\"2024\">2024</option>\n          </select>\n\n          {/* Dropdown for brand selection */}\n          <label>Select Brand: </label>\n          <select onChange={(e) => setSelectedBrand(e.target.value)} value={selectedBrand}>\n            {uniqueBrands.map((brand) => (\n              <option key={brand} value={brand}>\n                {brand}\n              </option>\n            ))}\n          </select>\n\n          {/* Pass only filtered data */}\n          <BarChart data={filteredData} />\n          <LineChart data={filteredData} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}