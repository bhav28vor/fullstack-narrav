{"ast":null,"code":"var _jsxFileName = \"/Users/vorambhavan/fullstack-task/frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BarChart from \"./BarChart\"; // Import the BarChart component\n\nfunction App() {\n  const [tasks, setTasks] = useState({});\n  const [selectedTaskData, setSelectedTaskData] = useState(null); // New state to hold the selected task's data\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/tasks\").then(response => {\n      setTasks(response.data); // Set the tasks data\n    }).catch(error => {\n      console.error(\"Error fetching tasks:\", error);\n    });\n  }, []);\n\n  // Fetch task data for analytics when a \"View Analytics\" button is clicked\n  const handleViewAnalytics = taskId => {\n    axios.get(`http://localhost:8000/tasks/${taskId}`).then(response => {\n      setSelectedTaskData(response.data); // Set the task data for analytics\n    }).catch(error => {\n      console.error(\"Error fetching task data:\", error);\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Task List\"), Object.keys(tasks).length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"No tasks found\") : /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, Object.entries(tasks).map(([taskId, taskStatus]) => /*#__PURE__*/React.createElement(\"li\", {\n    key: taskId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Task \", taskId, \": \", taskStatus, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleViewAnalytics(taskId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"View Analytics\")))), selectedTaskData && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Analytics for Task \", selectedTaskData.task_id), /*#__PURE__*/React.createElement(BarChart, {\n    data: selectedTaskData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), \" \"));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","axios","BarChart","App","tasks","setTasks","selectedTaskData","setSelectedTaskData","get","then","response","data","catch","error","console","handleViewAnalytics","taskId","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","map","taskStatus","key","onClick","task_id"],"sources":["/Users/vorambhavan/fullstack-task/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BarChart from \"./BarChart\"; // Import the BarChart component\n\nfunction App() {\n  const [tasks, setTasks] = useState({});\n  const [selectedTaskData, setSelectedTaskData] = useState(null); // New state to hold the selected task's data\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/tasks\")\n      .then((response) => {\n        setTasks(response.data); // Set the tasks data\n      })\n      .catch((error) => {\n        console.error(\"Error fetching tasks:\", error);\n      });\n  }, []);\n\n  // Fetch task data for analytics when a \"View Analytics\" button is clicked\n  const handleViewAnalytics = (taskId) => {\n    axios\n      .get(`http://localhost:8000/tasks/${taskId}`)\n      .then((response) => {\n        setSelectedTaskData(response.data); // Set the task data for analytics\n      })\n      .catch((error) => {\n        console.error(\"Error fetching task data:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Task List</h1>\n      {Object.keys(tasks).length === 0 ? (\n        <p>No tasks found</p>\n      ) : (\n        <ul>\n          {Object.entries(tasks).map(([taskId, taskStatus]) => (\n            <li key={taskId}>\n              Task {taskId}: {taskStatus}\n              <button onClick={() => handleViewAnalytics(taskId)}>\n                View Analytics\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {/* Show analytics if data is available */}\n      {selectedTaskData && (\n        <div>\n          <h2>Analytics for Task {selectedTaskData.task_id}</h2>\n          <BarChart data={selectedTaskData} /> {/* Display the BarChart */}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}